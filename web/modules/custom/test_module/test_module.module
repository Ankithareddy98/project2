<?php

/**
 * @file
 * Implementing hook_preprocess_hook.
 */

/**
 * Displaying other taxonomy terms.
 */
function test_module_preprocess_node(&$variables) {

  $node = $variables['elements']['#node'];

  $display = $node->get('field_display_body')->value;

  $body_field = $node->get('body')->value;

  if (!empty($body_field) && $display) {
    $variables['display_body'] = 1;
  }
  else {
    $variables['display_body'] = 0;
  }
  unset($variables['content']['field_display_body']);

  $current_node_taxonomy = $node->get('field_recipie_category')->referencedEntities();
  $current_taxonomy_term = [];
  foreach ($current_node_taxonomy as $term) {
    $current_taxonomy_term[] = [
      "name" => $term->getName(),
      "url" => $term->toUrl()->setAbsolute()->toString(),
    ];
  }

  $vid = 'cuisine';
  $storage = Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $query = Drupal::entityQuery('taxonomy_term')
    ->condition('vid', $vid)
    ->accessCheck(TRUE)
    ->execute();
  $terms = $storage->loadMultiple($query);
  $taxonomy_terms = [];

  foreach ($terms as $term) {
    $taxonomy_terms[] = [
      "name" => $term->getName(),
      "url" => $term->toUrl()->setAbsolute()->toString(),
    ];
  }

  $other_taxonomy_terms = array_udiff($taxonomy_terms, $current_taxonomy_term, function ($a, $b) {
    return strcmp($a['url'], $b['url']);
  });
  $variables['other_taxonomy_terms'] = $other_taxonomy_terms;
}
